---
name: Build and Push Golang Image to AWS ECR
on:
  workflow_dispatch:

jobs:
  build-and-push:
    name: Build and Push to ECR
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1


    - name: Build, Tag, and Push the Image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: docker
        run: echo "hello"
#        IMAGE_TAG: v1.0.0
        
    - name: Retrieve current image tag
      id: get_tag
      run: |
          echo "::set-output name=tag::$(git show-ref --tags --abbrev=0)"

    - name: Increment image tag
      id: increment_tag
      run: |
          # Retrieve the tag from the previous step's output
          current_tag=${{ steps.get_tag.outputs.tag }}
          
          # Parse the tag and increment it
          major_version=$(echo $current_tag | cut -d. -f1)
          minor_version=$(echo $current_tag | cut -d. -f2)
          patch_version=$(echo $current_tag | cut -d. -f3)
          new_patch_version=$((patch_version + 1))
          new_tag="${major_version}.${minor_version}.${new_patch_version}"

          echo "::set-output name=tag::$new_tag"

    - name: Update image tag
      run: |
          # Retrieve the updated tag from the previous step's output
          new_tag=${{ steps.increment_tag.outputs.tag }}

          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$new_tag .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$new_tag
          echo $ECR_REGISTRY
          echo $ECR_REPOSITORY
          echo $IMAGE_TAG
        
